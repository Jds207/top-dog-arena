{"date":"Sun Jul 20 2025 22:18:03 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21202.578},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":405344,"external":3473480,"heapTotal":36528128,"heapUsed":24330952,"rss":119955456},"pid":15072,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:21:55 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21435.171},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":225917,"external":3294157,"heapTotal":36528128,"heapUsed":23255920,"rss":94433280},"pid":21512,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:22:20 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21459.781},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":235854,"external":3304086,"heapTotal":36790272,"heapUsed":23455272,"rss":105435136},"pid":15020,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:22:20 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21459.781},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":235854,"external":3304086,"heapTotal":36528128,"heapUsed":23535816,"rss":105230336},"pid":14308,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:22:27 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21467},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":235799,"external":3304031,"heapTotal":36528128,"heapUsed":23514192,"rss":105209856},"pid":11124,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:22:27 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21467.031},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":235799,"external":3304031,"heapTotal":36528128,"heapUsed":23496896,"rss":105254912},"pid":16544,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:22:44 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21483.578},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":235952,"external":3304184,"heapTotal":36794368,"heapUsed":23948264,"rss":105107456},"pid":15316,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:22:44 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21483.593},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":235952,"external":3304184,"heapTotal":36528128,"heapUsed":23560304,"rss":105103360},"pid":20652,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:22:56 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21495.75},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":235952,"external":3304184,"heapTotal":36528128,"heapUsed":23524080,"rss":105132032},"pid":21428,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:22:56 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21495.765},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":235952,"external":3304184,"heapTotal":36528128,"heapUsed":23441272,"rss":104931328},"pid":1956,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:03 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21502.39},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23269896,"rss":104583168},"pid":16328,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:03 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21502.39},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36265984,"heapUsed":23481264,"rss":104845312},"pid":18712,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:10 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21509.968},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23450960,"rss":105009152},"pid":14688,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:10 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21509.968},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23543680,"rss":105709568},"pid":7896,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:17 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21516.765},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23274352,"rss":104964096},"pid":3324,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:17 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21516.765},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23579472,"rss":104927232},"pid":21356,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:23 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21522.984},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23630272,"rss":105455616},"pid":20652,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:23 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21523.015},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23499048,"rss":104927232},"pid":2604,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:30 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21530},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23485432,"rss":105418752},"pid":14084,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:30 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21530.015},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23652856,"rss":105103360},"pid":21784,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:38 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21537.484},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23565136,"rss":105398272},"pid":21760,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:38 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21537.5},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23510368,"rss":104910848},"pid":13176,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:45 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21544.734},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23459432,"rss":104816640},"pid":8924,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:45 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21544.734},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23606872,"rss":105287680},"pid":16048,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:53 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21552.359},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23506752,"rss":105140224},"pid":20172,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:23:53 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21552.359},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23262768,"rss":104632320},"pid":14056,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:24:00 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21559.906},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23548160,"rss":105078784},"pid":4656,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:24:00 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21559.921},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":231275,"external":3299507,"heapTotal":36528128,"heapUsed":23507776,"rss":105369600},"pid":9436,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:24:08 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21568.171},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":248382,"external":3316614,"heapTotal":36528128,"heapUsed":23639936,"rss":105398272},"pid":9844,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:24:08 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21568.187},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":248382,"external":3316614,"heapTotal":36528128,"heapUsed":23486744,"rss":105324544},"pid":21092,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:25:52 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21671.875},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":225917,"external":3294157,"heapTotal":36528128,"heapUsed":23136352,"rss":89251840},"pid":7388,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:26:31 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","os":{"loadavg":[0,0,0],"uptime":21710.812},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":225917,"external":3294157,"heapTotal":36528128,"heapUsed":23164888,"rss":89980928},"pid":15848,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at <anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:4:23)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts:31:2)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":23,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":"<anonymous>","line":4,"method":null,"native":false},{"column":2,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\config\\database.ts","function":null,"line":31,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false}]}
{"date":"Sun Jul 20 2025 22:27:44 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js:8:18)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)","os":{"loadavg":[0,0,0],"uptime":21784.14},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\server.js"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":20837,"external":2225764,"heapTotal":36003840,"heapUsed":16046392,"rss":67063808},"pid":20636,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js:8:18)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":18,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js","function":null,"line":8,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Object..js","line":1895,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false},{"column":16,"file":"node:internal/modules/helpers","function":"require","line":135,"method":null,"native":false}]}
{"date":"Sun Jul 20 2025 22:32:46 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js:8:18)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)","os":{"loadavg":[0,0,0],"uptime":22086.218},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\server.js"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":20837,"external":2225764,"heapTotal":35479552,"heapUsed":16024848,"rss":66416640},"pid":17844,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js:8:18)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":18,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js","function":null,"line":8,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Object..js","line":1895,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false},{"column":16,"file":"node:internal/modules/helpers","function":"require","line":135,"method":null,"native":false}]}
{"date":"Sun Jul 20 2025 22:34:05 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js:8:18)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)","os":{"loadavg":[0,0,0],"uptime":22164.484},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\server.js"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":20837,"external":2225764,"heapTotal":35479552,"heapUsed":16023008,"rss":64671744},"pid":4980,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js:8:18)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":18,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js","function":null,"line":8,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Object..js","line":1895,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false},{"column":16,"file":"node:internal/modules/helpers","function":"require","line":135,"method":null,"native":false}]}
{"date":"Sun Jul 20 2025 22:34:55 GMT-0500 (Central Daylight Time)","error":{},"exception":true,"level":"error","message":"uncaughtException: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\nError: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js:8:18)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)","os":{"loadavg":[0,0,0],"uptime":22214.515},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\server.js"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":20837,"external":2225764,"heapTotal":35217408,"heapUsed":16025640,"rss":64626688},"pid":21572,"uid":null,"version":"v22.17.1"},"stack":"Error: @prisma/client did not initialize yet. Please run \"prisma generate\" and try to import it again.\n    at new PrismaClient (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js:43:11)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js:8:18)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object..js (node:internal/modules/cjs/loader:1895:10)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)\n    at Function._load (node:internal/modules/cjs/loader:1282:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)\n    at Module.require (node:internal/modules/cjs/loader:1487:12)\n    at require (node:internal/modules/helpers:135:16)","trace":[{"column":11,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\.prisma\\client\\default.js","function":"new PrismaClient","line":43,"method":null,"native":false},{"column":18,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\dist\\config\\database.js","function":null,"line":8,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Object..js","line":1895,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1282,"method":"_load","native":false},{"column":14,"file":"node:diagnostics_channel","function":"TracingChannel.traceSync","line":322,"method":"traceSync","native":false},{"column":24,"file":"node:internal/modules/cjs/loader","function":"wrapModuleLoad","line":235,"method":null,"native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1487,"method":"require","native":false},{"column":16,"file":"node:internal/modules/helpers","function":"require","line":135,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 15:55:15 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:843:9)","os":{"loadavg":[0,0,0],"uptime":171035.843},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":286869,"external":3780032,"heapTotal":57180160,"heapUsed":26998880,"rss":141340672},"pid":20224,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:843:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":843,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 15:57:12 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:698:9)","os":{"loadavg":[0,0,0],"uptime":171152.25},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":236372,"external":3729551,"heapTotal":56922112,"heapUsed":26690256,"rss":118149120},"pid":27584,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:698:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":698,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 15:57:31 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:741:9)","os":{"loadavg":[0,0,0],"uptime":171171.593},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":268695,"external":3761866,"heapTotal":56918016,"heapUsed":25478560,"rss":142221312},"pid":31608,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:741:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":741,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 17:39:32 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1092:9)","os":{"loadavg":[0,0,0],"uptime":177292.531},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":236375,"external":3729554,"heapTotal":57708544,"heapUsed":28073064,"rss":118030336},"pid":31464,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1092:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1092,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 17:40:29 GMT-0500 (Central Daylight Time)","error":{"code":"ENOENT","errno":-4058,"path":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n","syscall":"open"},"exception":true,"level":"error","message":"uncaughtException: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\nError: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\n    at Object.openSync (node:fs:561:18)\n    at Object.readFileSync (node:fs:445:35)\n    at Utils.getStringFromFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js:284:19)\n    at Yaml.parseFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:46:21)\n    at Yaml.load (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:78:17)\n    at path (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:346:30)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1132:16)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)","os":{"loadavg":[0,0,0],"uptime":177349.203},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":237045,"external":3698493,"heapTotal":36962304,"heapUsed":24756664,"rss":121929728},"pid":23152,"uid":null,"version":"v22.17.1"},"stack":"Error: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\n    at Object.openSync (node:fs:561:18)\n    at Object.readFileSync (node:fs:445:35)\n    at Utils.getStringFromFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js:284:19)\n    at Yaml.parseFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:46:21)\n    at Yaml.load (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:78:17)\n    at path (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:346:30)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1132:16)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)","trace":[{"column":18,"file":"node:fs","function":"Object.openSync","line":561,"method":"openSync","native":false},{"column":35,"file":"node:fs","function":"Object.readFileSync","line":445,"method":"readFileSync","native":false},{"column":19,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js","function":"Utils.getStringFromFile","line":284,"method":"getStringFromFile","native":false},{"column":21,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js","function":"Yaml.parseFile","line":46,"method":"parseFile","native":false},{"column":17,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js","function":"Yaml.load","line":78,"method":"load","native":false},{"column":30,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"path","line":346,"method":null,"native":false},{"column":16,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":null,"line":1132,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false}]}
{"date":"Tue Jul 22 2025 17:40:29 GMT-0500 (Central Daylight Time)","error":{"code":"ENOENT","errno":-4058,"path":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n","syscall":"open"},"exception":true,"level":"error","message":"uncaughtException: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\nError: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\n    at Object.openSync (node:fs:561:18)\n    at Object.readFileSync (node:fs:445:35)\n    at Utils.getStringFromFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js:284:19)\n    at Yaml.parseFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:46:21)\n    at Yaml.load (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:78:17)\n    at path (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:346:30)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1132:16)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)","os":{"loadavg":[0,0,0],"uptime":177349.312},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":237045,"external":3698493,"heapTotal":36962304,"heapUsed":24685248,"rss":121745408},"pid":23728,"uid":null,"version":"v22.17.1"},"stack":"Error: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\n    at Object.openSync (node:fs:561:18)\n    at Object.readFileSync (node:fs:445:35)\n    at Utils.getStringFromFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js:284:19)\n    at Yaml.parseFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:46:21)\n    at Yaml.load (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:78:17)\n    at path (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:346:30)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1132:16)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)","trace":[{"column":18,"file":"node:fs","function":"Object.openSync","line":561,"method":"openSync","native":false},{"column":35,"file":"node:fs","function":"Object.readFileSync","line":445,"method":"readFileSync","native":false},{"column":19,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js","function":"Utils.getStringFromFile","line":284,"method":"getStringFromFile","native":false},{"column":21,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js","function":"Yaml.parseFile","line":46,"method":"parseFile","native":false},{"column":17,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js","function":"Yaml.load","line":78,"method":"load","native":false},{"column":30,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"path","line":346,"method":null,"native":false},{"column":16,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":null,"line":1132,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false}]}
{"date":"Tue Jul 22 2025 17:42:05 GMT-0500 (Central Daylight Time)","error":{"code":"ENOENT","errno":-4058,"path":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n","syscall":"open"},"exception":true,"level":"error","message":"uncaughtException: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\nError: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\n    at Object.openSync (node:fs:561:18)\n    at Object.readFileSync (node:fs:445:35)\n    at Utils.getStringFromFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js:284:19)\n    at Yaml.parseFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:46:21)\n    at Yaml.load (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:78:17)\n    at path (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:346:30)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1132:16)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)","os":{"loadavg":[0,0,0],"uptime":177445.312},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":193149,"external":3654605,"heapTotal":36966400,"heapUsed":24987472,"rss":96669696},"pid":29080,"uid":null,"version":"v22.17.1"},"stack":"Error: ENOENT: no such file or directory, open 'C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\openapi: 3.0.3\r\ninfo:\r\n  title: Top Dog Arena NFT API\r\n  description: |\r\n    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.\r\n    \r\n    ## Features\r\n    - Create single and batch NFTs on XRPL\r\n    - Query NFT details and ownership\r\n    - Health monitoring endpoints\r\n    - Rate limiting and validation\r\n    \r\n    ## Rate Limits\r\n    - General API: 100 requests per 15 minutes per IP\r\n    - NFT Creation: 10 requests per hour per IP  \r\n    - Batch Operations: 3 requests per hour per IP\r\n    - Read Operations: 200 requests per 15 minutes per IP\r\n    \r\n    ## XRPL Integration\r\n    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.\r\n    \r\n  version: 1.0.0\r\n  contact:\r\n    name: Top Dog Arena\r\n    url: https:\\topdogarena.com\r\n    email: support@topdogarena.com\r\n  license:\r\n    name: MIT\r\n    url: https:\\opensource.org\\licenses\\MIT\r\n\r\nservers:\r\n  - url: http:\\localhost:3000\\api\r\n    description: Development server with full database integration\r\n  - url: http:\\localhost:3000\r\n    description: Development server base\r\n  - url: https:\\api.topdogarena.com\\api\r\n    description: Production server\r\n\r\ntags:\r\n  - name: Health\r\n    description: API health check endpoints\r\n  - name: Wallet\r\n    description: XRPL wallet creation and management\r\n  - name: NFT\r\n    description: NFT creation and management operations\r\n  - name: Auth\r\n    description: Authentication endpoints (coming soon)\r\n\r\npaths:\r\n  \\health:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Basic health check\r\n      description: Simple endpoint to verify API is running\r\n      operationId: getHealth\r\n      responses:\r\n        '200':\r\n          description: API is healthy\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\HealthResponse'\r\n              example:\r\n                success: true\r\n                message: \"Top Dog Arena API is running\"\r\n                timestamp: \"2025-07-21T03:29:05.442Z\"\r\n                version: \"1.0.0\"\r\n\r\n  \\health\\detailed:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: Detailed health check\r\n      description: Comprehensive health check including service status\r\n      operationId: getDetailedHealth\r\n      responses:\r\n        '200':\r\n          description: Detailed health information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\DetailedHealthResponse'\r\n        '503':\r\n          description: Service unavailable\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\health\\xrpl:\r\n    get:\r\n      tags:\r\n        - Health\r\n      summary: XRPL connection status\r\n      description: Check XRPL network connection and wallet status\r\n      operationId: getXRPLHealth\r\n      responses:\r\n        '200':\r\n          description: XRPL connection information\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\XRPLHealthResponse'\r\n        '503':\r\n          description: XRPL connection error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create a single NFT\r\n      description: |\r\n        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.\r\n        \r\n        **Rate Limit:** 10 requests per hour per IP\r\n      operationId: createNFT\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n            example:\r\n              name: \"Mike Trout - Angels Superstar\"\r\n              description: \"A legendary baseball card featuring Mike Trout in his Angels uniform.\"\r\n              image: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n              attributes:\r\n                - trait_type: \"Player\"\r\n                  value: \"Mike Trout\"\r\n                - trait_type: \"Team\"\r\n                  value: \"Los Angeles Angels\"\r\n                - trait_type: \"Position\"\r\n                  value: \"Center Field\"\r\n                - trait_type: \"Rarity\"\r\n                  value: \"Legendary\"\r\n              external_url: \"https:\\topdogarena.com\\players\\mike-trout\"\r\n              transferFee: 500\r\n      responses:\r\n        '201':\r\n          description: NFT created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTCreatedResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n        '503':\r\n          description: XRPL service not configured\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\batch-create:\r\n    post:\r\n      tags:\r\n        - NFT\r\n      summary: Create multiple NFTs in batch\r\n      description: |\r\n        Creates up to 10 NFTs in a single batch operation.\r\n        \r\n        **Rate Limit:** 3 requests per hour per IP\r\n      operationId: batchCreateNFTs\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              $ref: '#\\components\\schemas\\BatchCreateNFTRequest'\r\n      responses:\r\n        '201':\r\n          description: All NFTs created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '207':\r\n          description: Partial success - some NFTs failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\BatchNFTResponse'\r\n        '400':\r\n          description: Invalid request data\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ValidationErrorResponse'\r\n        '429':\r\n          description: Rate limit exceeded\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\RateLimitErrorResponse'\r\n\r\n  \\nft\\{nftId}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT details by ID\r\n      description: Retrieve detailed information about a specific NFT\r\n      operationId: getNFTById\r\n      parameters:\r\n        - name: nftId\r\n          in: path\r\n          required: true\r\n          description: 64-character hexadecimal NFT ID\r\n          schema:\r\n            type: string\r\n            pattern: '^[0-9A-Fa-f]{64}$'\r\n            example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n      responses:\r\n        '200':\r\n          description: NFT details retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTDetailsResponse'\r\n        '400':\r\n          description: Invalid NFT ID format\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n        '404':\r\n          description: NFT not found\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\account\\{account}:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFTs owned by account\r\n      description: Retrieve all NFTs owned by a specific XRPL account\r\n      operationId: getAccountNFTs\r\n      parameters:\r\n        - name: account\r\n          in: path\r\n          required: true\r\n          description: XRPL account address\r\n          schema:\r\n            type: string\r\n            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n            example: \"rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH\"\r\n        - name: limit\r\n          in: query\r\n          description: Number of results to return (1-100)\r\n          schema:\r\n            type: integer\r\n            minimum: 1\r\n            maximum: 100\r\n            default: 20\r\n        - name: marker\r\n          in: query\r\n          description: Pagination marker for next page\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          description: Account NFTs retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\AccountNFTsResponse'\r\n        '400':\r\n          description: Invalid account address\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\nft\\wallet\\info:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get wallet information\r\n      description: Retrieve wallet and network configuration information\r\n      operationId: getWalletInfo\r\n      responses:\r\n        '200':\r\n          description: Wallet information retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\WalletInfoResponse'\r\n\r\n  \\api\\stats\\nft:\r\n    get:\r\n      tags:\r\n        - NFT\r\n      summary: Get NFT collection statistics\r\n      description: Retrieve statistics about the NFT collection from the database\r\n      operationId: getNFTStats\r\n      responses:\r\n        '200':\r\n          description: NFT statistics retrieved successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NFTStatsResponse'\r\n        '500':\r\n          description: Database error\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\create:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Create new XRPL wallet\r\n      description: Generate a new XRPL wallet with address, seed, and keys\r\n      operationId: createWallet\r\n      responses:\r\n        '201':\r\n          description: Wallet created successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                        example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n                      seed:\r\n                        type: string\r\n                        example: \"sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4\"\r\n                      publicKey:\r\n                        type: string\r\n                      network:\r\n                        type: string\r\n                        example: \"testnet\"\r\n                      databaseId:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  warning:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '500':\r\n          description: Wallet creation failed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\validate:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Validate XRPL address format\r\n      description: Check if an XRPL address has valid format\r\n      operationId: validateWalletAddress\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Address validation result\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      isValid:\r\n                        type: boolean\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Address is required\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\fund:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Fund wallet from testnet faucet\r\n      description: Fund a wallet using XRPL testnet faucet (testnet only)\r\n      operationId: fundWallet\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD\"\r\n      responses:\r\n        '200':\r\n          description: Wallet funded successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: string\r\n                        example: \"1000\"\r\n                      network:\r\n                        type: string\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '400':\r\n          description: Invalid address or not testnet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\ErrorResponse'\r\n\r\n  \\wallet\\sync-balance:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync wallet balance from XRPL\r\n      description: Fetch and update wallet balance from XRPL network\r\n      operationId: syncWalletBalance\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              required:\r\n                - address\r\n              properties:\r\n                address:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n      responses:\r\n        '200':\r\n          description: Balance synced successfully\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        properties:\r\n                          drops:\r\n                            type: string\r\n                          xrp:\r\n                            type: string\r\n                      synced:\r\n                        type: boolean\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n        '404':\r\n          description: Account not found (unfunded)\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      address:\r\n                        type: string\r\n                      balance:\r\n                        type: object\r\n                        nullable: true\r\n                      synced:\r\n                        type: boolean\r\n                  error:\r\n                    type: string\r\n                  message:\r\n                    type: string\r\n\r\n  \\wallet\\sync-all:\r\n    post:\r\n      tags:\r\n        - Wallet\r\n      summary: Sync all wallet balances\r\n      description: Sync balances for all wallets in the database\r\n      operationId: syncAllWalletBalances\r\n      responses:\r\n        '200':\r\n          description: Batch sync completed\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                type: object\r\n                properties:\r\n                  success:\r\n                    type: boolean\r\n                  data:\r\n                    type: object\r\n                    properties:\r\n                      totalAccounts:\r\n                        type: integer\r\n                      successCount:\r\n                        type: integer\r\n                      errorCount:\r\n                        type: integer\r\n                      results:\r\n                        type: array\r\n                        items:\r\n                          type: object\r\n                          properties:\r\n                            address:\r\n                              type: string\r\n                            success:\r\n                              type: boolean\r\n                            balance:\r\n                              type: string\r\n                              nullable: true\r\n                            error:\r\n                              type: string\r\n                              nullable: true\r\n                  message:\r\n                    type: string\r\n                  timestamp:\r\n                    type: string\r\n\r\n  \\auth\\register:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: Register new user\r\n      description: Register a new user account (not implemented yet)\r\n      operationId: registerUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n                  minLength: 8\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\n  \\auth\\login:\r\n    post:\r\n      tags:\r\n        - Auth\r\n      summary: User login\r\n      description: Authenticate user and return access token (not implemented yet)\r\n      operationId: loginUser\r\n      requestBody:\r\n        required: true\r\n        content:\r\n          application\\json:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                email:\r\n                  type: string\r\n                  format: email\r\n                password:\r\n                  type: string\r\n      responses:\r\n        '501':\r\n          description: Not implemented yet\r\n          content:\r\n            application\\json:\r\n              schema:\r\n                $ref: '#\\components\\schemas\\NotImplementedResponse'\r\n\r\ncomponents:\r\n  schemas:\r\n    HealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        message:\r\n          type: string\r\n          example: \"Top Dog Arena API is running\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n          example: \"1.0.0\"\r\n\r\n    DetailedHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        version:\r\n          type: string\r\n        environment:\r\n          type: string\r\n          enum: [development, production, test]\r\n        services:\r\n          type: object\r\n          properties:\r\n            api:\r\n              type: string\r\n              enum: [healthy, unhealthy]\r\n            xrpl:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n            database:\r\n              type: string\r\n              enum: [connected, disconnected, not_configured, error]\r\n\r\n    XRPLHealthResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        xrpl:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: string\r\n              enum: [mainnet, testnet, devnet]\r\n            serverUrl:\r\n              type: string\r\n              format: uri\r\n            walletAddress:\r\n              type: string\r\n              nullable: true\r\n            connected:\r\n              type: boolean\r\n            balance:\r\n              type: object\r\n              nullable: true\r\n              properties:\r\n                balance:\r\n                  type: string\r\n                  description: Total balance in drops\r\n                available:\r\n                  type: string\r\n                  description: Available balance in drops\r\n\r\n    CreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - name\r\n        - description\r\n        - image\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 100\r\n          example: \"Mike Trout - Angels Superstar\"\r\n        description:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 1000\r\n          example: \"A legendary baseball card featuring Mike Trout\"\r\n        image:\r\n          type: string\r\n          format: uri\r\n          example: \"https:\\topdogarena.com\\images\\cards\\mike-trout-001.png\"\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n          example:\r\n            - trait_type: \"Player\"\r\n              value: \"Mike Trout\"\r\n            - trait_type: \"Team\"\r\n              value: \"Los Angeles Angels\"\r\n        external_url:\r\n          type: string\r\n          format: uri\r\n        animation_url:\r\n          type: string\r\n          format: uri\r\n        transferFee:\r\n          type: integer\r\n          minimum: 0\r\n          maximum: 50000\r\n          description: Transfer fee in 1\\100,000th units (10000 = 10%)\r\n        recipient:\r\n          type: string\r\n          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'\r\n          description: XRPL address to mint NFT to\r\n        flags:\r\n          type: integer\r\n          description: NFT flags (8 = transferable)\r\n\r\n    BatchCreateNFTRequest:\r\n      type: object\r\n      required:\r\n        - nfts\r\n      properties:\r\n        nfts:\r\n          type: array\r\n          minItems: 1\r\n          maxItems: 10\r\n          items:\r\n            $ref: '#\\components\\schemas\\CreateNFTRequest'\r\n\r\n    NFTCreatedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            nftId:\r\n              type: string\r\n              example: \"000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65\"\r\n            txHash:\r\n              type: string\r\n              example: \"E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277\"\r\n            fee:\r\n              type: string\r\n              example: \"12\"\r\n            metadata:\r\n              $ref: '#\\components\\schemas\\NFTMetadata'\r\n        message:\r\n          type: string\r\n          example: \"NFT created successfully\"\r\n\r\n    BatchNFTResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            successful:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  nftId:\r\n                    type: string\r\n                  txHash:\r\n                    type: string\r\n                  fee:\r\n                    type: string\r\n                  metadata:\r\n                    $ref: '#\\components\\schemas\\NFTMetadata'\r\n            failed:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  index:\r\n                    type: integer\r\n                  error:\r\n                    type: string\r\n                  nftData:\r\n                    type: object\r\n            summary:\r\n              type: object\r\n              properties:\r\n                total:\r\n                  type: integer\r\n                successful:\r\n                  type: integer\r\n                failed:\r\n                  type: integer\r\n        message:\r\n          type: string\r\n\r\n    NFTDetailsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            nft_id:\r\n              type: string\r\n            ledger_index:\r\n              type: integer\r\n            owner:\r\n              type: string\r\n            is_burned:\r\n              type: boolean\r\n            flags:\r\n              type: integer\r\n            transfer_fee:\r\n              type: integer\r\n            issuer:\r\n              type: string\r\n            nft_taxon:\r\n              type: integer\r\n            nft_serial:\r\n              type: integer\r\n            uri:\r\n              type: string\r\n              description: Hex-encoded metadata URI\r\n        message:\r\n          type: string\r\n\r\n    AccountNFTsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n        data:\r\n          type: object\r\n          properties:\r\n            account:\r\n              type: string\r\n            nfts:\r\n              type: array\r\n              items:\r\n                type: object\r\n                properties:\r\n                  Flags:\r\n                    type: integer\r\n                  Issuer:\r\n                    type: string\r\n                  NFTokenID:\r\n                    type: string\r\n                  NFTokenTaxon:\r\n                    type: integer\r\n                  TransferFee:\r\n                    type: integer\r\n                  URI:\r\n                    type: string\r\n                  nft_serial:\r\n                    type: integer\r\n            count:\r\n              type: integer\r\n        message:\r\n          type: string\r\n\r\n    WalletInfoResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            network:\r\n              type: object\r\n              properties:\r\n                network:\r\n                  type: string\r\n                  example: \"testnet\"\r\n                  description: \"XRPL network (testnet or mainnet)\"\r\n                serverUrl:\r\n                  type: string\r\n                  example: \"wss:\\s.altnet.rippletest.net:51233\"\r\n                  description: \"XRPL server WebSocket URL\"\r\n                walletAddress:\r\n                  type: string\r\n                  example: \"rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b\"\r\n                  description: \"XRPL wallet address\"\r\n            balance:\r\n              type: object\r\n              properties:\r\n                drops:\r\n                  type: string\r\n                  example: \"30000000\"\r\n                  description: \"Balance in drops (1 XRP = 1,000,000 drops)\"\r\n                xrp:\r\n                  type: string\r\n                  example: \"30.000000\"\r\n                  description: \"Balance in XRP (human readable)\"\r\n            connected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the wallet is connected\"\r\n            clientConnected:\r\n              type: boolean\r\n              example: true\r\n              description: \"Whether the XRPL client is connected\"\r\n        message:\r\n          type: string\r\n          example: \"Real XRPL wallet connected\"\r\n          description: \"Status message\"\r\n\r\n    NFTStatsResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: true\r\n        data:\r\n          type: object\r\n          properties:\r\n            totalNFTs:\r\n              type: number\r\n              example: 10\r\n              description: Total number of NFTs in the database\r\n            totalAccounts:\r\n              type: number\r\n              example: 5\r\n              description: Total number of unique accounts\r\n            recentMints:\r\n              type: number\r\n              example: 3\r\n              description: Number of NFTs minted in the last 24 hours\r\n            totalTransactions:\r\n              type: number\r\n              example: 25\r\n              description: Total number of recorded transactions\r\n        message:\r\n          type: string\r\n          example: \"NFT statistics retrieved successfully\"\r\n          description: Status message\r\n\r\n    NFTMetadata:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n        description:\r\n          type: string\r\n        image:\r\n          type: string\r\n        attributes:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              trait_type:\r\n                type: string\r\n              value:\r\n                oneOf:\r\n                  - type: string\r\n                  - type: number\r\n        external_url:\r\n          type: string\r\n        animation_url:\r\n          type: string\r\n\r\n    ErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n        message:\r\n          type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        path:\r\n          type: string\r\n\r\n    ValidationErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Validation failed\"\r\n        message:\r\n          type: string\r\n          example: \"Invalid request data\"\r\n        details:\r\n          type: array\r\n          items:\r\n            type: object\r\n            properties:\r\n              field:\r\n                type: string\r\n              message:\r\n                type: string\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n    RateLimitErrorResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        error:\r\n          type: string\r\n          example: \"Too many requests\"\r\n        message:\r\n          type: string\r\n          example: \"Rate limit exceeded. Please try again later.\"\r\n        retryAfter:\r\n          type: string\r\n          example: \"15 minutes\"\r\n\r\n    NotImplementedResponse:\r\n      type: object\r\n      properties:\r\n        success:\r\n          type: boolean\r\n          example: false\r\n        message:\r\n          type: string\r\n          example: \"Feature not implemented yet\"\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n\r\n  securitySchemes:\r\n    BearerAuth:\r\n      type: http\r\n      scheme: bearer\r\n      bearerFormat: JWT\r\n      description: JWT token for authenticated requests (coming soon)\r\n\r\nsecurity: []\r\n'\n    at Object.openSync (node:fs:561:18)\n    at Object.readFileSync (node:fs:445:35)\n    at Utils.getStringFromFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js:284:19)\n    at Yaml.parseFile (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:46:21)\n    at Yaml.load (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js:78:17)\n    at path (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:346:30)\n    at Object.<anonymous> (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1132:16)\n    at Module._compile (node:internal/modules/cjs/loader:1730:14)\n    at Object.transformer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1104)\n    at Module.load (node:internal/modules/cjs/loader:1465:32)","trace":[{"column":18,"file":"node:fs","function":"Object.openSync","line":561,"method":"openSync","native":false},{"column":35,"file":"node:fs","function":"Object.readFileSync","line":445,"method":"readFileSync","native":false},{"column":19,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Utils.js","function":"Utils.getStringFromFile","line":284,"method":"getStringFromFile","native":false},{"column":21,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js","function":"Yaml.parseFile","line":46,"method":"parseFile","native":false},{"column":17,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\yamljs\\lib\\Yaml.js","function":"Yaml.load","line":78,"method":"load","native":false},{"column":30,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"path","line":346,"method":null,"native":false},{"column":16,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":null,"line":1132,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1730,"method":"_compile","native":false},{"column":1104,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"Object.transformer","line":3,"method":"transformer","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":1465,"method":"load","native":false}]}
{"date":"Tue Jul 22 2025 17:42:40 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1092:9)","os":{"loadavg":[0,0,0],"uptime":177480.921},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":236416,"external":3729595,"heapTotal":57708544,"heapUsed":28117320,"rss":118353920},"pid":23156,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1092:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1092,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 17:42:40 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1092:9)","os":{"loadavg":[0,0,0],"uptime":177480.968},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":236415,"external":3729594,"heapTotal":57446400,"heapUsed":28134048,"rss":118079488},"pid":22672,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1092:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1092,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:04:17 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":178777.265},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":287829,"external":3781000,"heapTotal":57704448,"heapUsed":26010960,"rss":143765504},"pid":4016,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:04:17 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":178777.265},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":286837,"external":3780008,"heapTotal":57180160,"heapUsed":24538000,"rss":142041088},"pid":21256,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:04:40 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":178800.125},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":287977,"external":3781148,"heapTotal":57970688,"heapUsed":28376304,"rss":144039936},"pid":20708,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:04:40 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":178800.14},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":287113,"external":3780284,"heapTotal":57180160,"heapUsed":24975776,"rss":143388672},"pid":14252,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:04:45 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":178805.89},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":286825,"external":3779996,"heapTotal":57442304,"heapUsed":24604472,"rss":142569472},"pid":8704,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:04:45 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":178805.968},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":286826,"external":3779997,"heapTotal":57180160,"heapUsed":24517864,"rss":141758464},"pid":20028,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:04:59 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":178819.921},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":286822,"external":3779993,"heapTotal":57180160,"heapUsed":24531584,"rss":141815808},"pid":21704,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:04:59 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":178819.953},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":287965,"external":3781136,"heapTotal":56918016,"heapUsed":27703576,"rss":143708160},"pid":24208,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:12:04 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1324:9)","os":{"loadavg":[0,0,0],"uptime":179244.328},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":290543,"external":3783714,"heapTotal":56918016,"heapUsed":28785616,"rss":142970880},"pid":26640,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1324:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1324,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:12:04 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1324:9)","os":{"loadavg":[0,0,0],"uptime":179244.375},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":290544,"external":3783715,"heapTotal":56918016,"heapUsed":28457640,"rss":143773696},"pid":12620,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1324:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1324,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:12:17 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":179257.078},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":287104,"external":3780275,"heapTotal":57442304,"heapUsed":25048944,"rss":143278080},"pid":26920,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 18:12:17 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","os":{"loadavg":[0,0,0],"uptime":179257.078},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":288172,"external":3781343,"heapTotal":56918016,"heapUsed":28009208,"rss":143568896},"pid":9288,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1275:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1275,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 19:56:38 GMT-0500 (Central Daylight Time)","error":{"code":"MODULE_NOT_FOUND","requireStack":["C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\services\\songbird.service.ts","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"]},"exception":true,"level":"error","message":"uncaughtException: Cannot find module 'ethers'\nRequire stack:\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\services\\songbird.service.ts\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts\nError: Cannot find module 'ethers'\nRequire stack:\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\services\\songbird.service.ts\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts\n    at node:internal/modules/cjs/loader:1401:15\n    at nextResolveSimple (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:1004)\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:2630\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1542\n    at resolveTsPaths (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:760)\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:1102\n    at m._resolveFilename (file:///C:/Users/jds86/OneDrive/Documents/Top%20Dog%20Arena/Projects/backend/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1057:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1062:22)\n    at Function._load (node:internal/modules/cjs/loader:1211:37)","os":{"loadavg":[0,0,0],"uptime":185518.796},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":289141,"external":3750581,"heapTotal":38010880,"heapUsed":22584944,"rss":121856000},"pid":22288,"uid":null,"version":"v22.17.1"},"stack":"Error: Cannot find module 'ethers'\nRequire stack:\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\services\\songbird.service.ts\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts\n    at node:internal/modules/cjs/loader:1401:15\n    at nextResolveSimple (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:1004)\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:2630\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1542\n    at resolveTsPaths (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:760)\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:1102\n    at m._resolveFilename (file:///C:/Users/jds86/OneDrive/Documents/Top%20Dog%20Arena/Projects/backend/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1057:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1062:22)\n    at Function._load (node:internal/modules/cjs/loader:1211:37)","trace":[{"column":15,"file":"node:internal/modules/cjs/loader","function":null,"line":1401,"method":null,"native":false},{"column":1004,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"nextResolveSimple","line":4,"method":null,"native":false},{"column":2630,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":null,"line":3,"method":null,"native":false},{"column":1542,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":null,"line":3,"method":null,"native":false},{"column":760,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"resolveTsPaths","line":4,"method":null,"native":false},{"column":1102,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":null,"line":4,"method":null,"native":false},{"column":789,"file":"file:///C:/Users/jds86/OneDrive/Documents/Top%20Dog%20Arena/Projects/backend/node_modules/tsx/dist/register-B7jrtLTO.mjs","function":"m._resolveFilename","line":1,"method":"_resolveFilename","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"defaultResolveImpl","line":1057,"method":null,"native":false},{"column":22,"file":"node:internal/modules/cjs/loader","function":"resolveForCJSWithHooks","line":1062,"method":null,"native":false},{"column":37,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1211,"method":"_load","native":false}]}
{"date":"Tue Jul 22 2025 19:57:12 GMT-0500 (Central Daylight Time)","error":{"code":"MODULE_NOT_FOUND","requireStack":["C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\services\\songbird.service.ts","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"]},"exception":true,"level":"error","message":"uncaughtException: Cannot find module 'ethers'\nRequire stack:\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\services\\songbird.service.ts\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts\nError: Cannot find module 'ethers'\nRequire stack:\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\services\\songbird.service.ts\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts\n    at node:internal/modules/cjs/loader:1401:15\n    at nextResolveSimple (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:1004)\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:2630\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1542\n    at resolveTsPaths (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:760)\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:1102\n    at m._resolveFilename (file:///C:/Users/jds86/OneDrive/Documents/Top%20Dog%20Arena/Projects/backend/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1057:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1062:22)\n    at Function._load (node:internal/modules/cjs/loader:1211:37)","os":{"loadavg":[0,0,0],"uptime":185552.515},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":212797,"external":3674245,"heapTotal":37748736,"heapUsed":22317944,"rss":105959424},"pid":6172,"uid":null,"version":"v22.17.1"},"stack":"Error: Cannot find module 'ethers'\nRequire stack:\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\services\\songbird.service.ts\n- C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts\n    at node:internal/modules/cjs/loader:1401:15\n    at nextResolveSimple (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:1004)\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:2630\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:3:1542\n    at resolveTsPaths (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:760)\n    at C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs:4:1102\n    at m._resolveFilename (file:///C:/Users/jds86/OneDrive/Documents/Top%20Dog%20Arena/Projects/backend/node_modules/tsx/dist/register-B7jrtLTO.mjs:1:789)\n    at defaultResolveImpl (node:internal/modules/cjs/loader:1057:19)\n    at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1062:22)\n    at Function._load (node:internal/modules/cjs/loader:1211:37)","trace":[{"column":15,"file":"node:internal/modules/cjs/loader","function":null,"line":1401,"method":null,"native":false},{"column":1004,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"nextResolveSimple","line":4,"method":null,"native":false},{"column":2630,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":null,"line":3,"method":null,"native":false},{"column":1542,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":null,"line":3,"method":null,"native":false},{"column":760,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":"resolveTsPaths","line":4,"method":null,"native":false},{"column":1102,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\tsx\\dist\\register-D46fvsV_.cjs","function":null,"line":4,"method":null,"native":false},{"column":789,"file":"file:///C:/Users/jds86/OneDrive/Documents/Top%20Dog%20Arena/Projects/backend/node_modules/tsx/dist/register-B7jrtLTO.mjs","function":"m._resolveFilename","line":1,"method":"_resolveFilename","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"defaultResolveImpl","line":1057,"method":null,"native":false},{"column":22,"file":"node:internal/modules/cjs/loader","function":"resolveForCJSWithHooks","line":1062,"method":null,"native":false},{"column":37,"file":"node:internal/modules/cjs/loader","function":"Function._load","line":1211,"method":"_load","native":false}]}
{"date":"Tue Jul 22 2025 20:55:54 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1579:9)","os":{"loadavg":[0,0,0],"uptime":189074.046},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":307482,"external":3800653,"heapTotal":63733760,"heapUsed":34971224,"rss":142757888},"pid":14508,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1579:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1579,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 21:03:25 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1579:9)","os":{"loadavg":[0,0,0],"uptime":189525.828},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":294421,"external":3787600,"heapTotal":63733760,"heapUsed":34800840,"rss":129388544},"pid":28432,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1579:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1579,"method":null,"native":false}]}
{"date":"Tue Jul 22 2025 22:32:04 GMT-0500 (Central Daylight Time)","error":{"address":"::","code":"EADDRINUSE","errno":-4091,"port":3000,"syscall":"listen"},"exception":true,"level":"error","message":"uncaughtException: listen EADDRINUSE: address already in use :::3000\nError: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1745:9)","os":{"loadavg":[0,0,0],"uptime":194844.109},"process":{"argv":["C:\\Program Files\\nodejs\\node.exe","C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts"],"cwd":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend","execPath":"C:\\Program Files\\nodejs\\node.exe","gid":null,"memoryUsage":{"arrayBuffers":310806,"external":3803985,"heapTotal":63733760,"heapUsed":35398760,"rss":128864256},"pid":28112,"uid":null,"version":"v22.17.1"},"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1940:16)\n    at listenInCluster (node:net:1997:12)\n    at Server.listen (node:net:2102:7)\n    at Function.listen (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js:635:24)\n    at startServer (C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts:1745:9)","trace":[{"column":16,"file":"node:net","function":"Server.setupListenHandle [as _listen2]","line":1940,"method":"setupListenHandle [as _listen2]","native":false},{"column":12,"file":"node:net","function":"listenInCluster","line":1997,"method":null,"native":false},{"column":7,"file":"node:net","function":"Server.listen","line":2102,"method":"listen","native":false},{"column":24,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\node_modules\\express\\lib\\application.js","function":"Function.listen","line":635,"method":"listen","native":false},{"column":9,"file":"C:\\Users\\jds86\\OneDrive\\Documents\\Top Dog Arena\\Projects\\backend\\src\\fixed-server.ts","function":"startServer","line":1745,"method":null,"native":false}]}
