openapi: 3.0.3
info:
  title: Top Dog Arena NFT API
  description: |
    RESTful API for creating and managing NFTs on the XRPL (XRP Ledger) for Top Dog Arena baseball card marketplace.
    
    ## Features
    - Create single and batch NFTs on XRPL
    - Query NFT details and ownership
    - XRPL wallet management with testnet faucet integration
    - Health monitoring endpoints
    - Rate limiting and validation
    
    ## Rate Limits
    - General API: 100 requests per 15 minutes per IP
    - NFT Creation: 10 requests per hour per IP  
    - Batch Operations: 3 requests per hour per IP
    - Read Operations: 200 requests per 15 minutes per IP
    
    ## XRPL Integration
    This API integrates with the XRP Ledger to mint NFTs representing baseball cards and other collectibles.
    The wallet funding feature uses the XRPL testnet faucet, which creates new wallets instead of funding existing addresses.
    
    ## Last Updated
    July 23, 2025 - Updated wallet funding endpoint with enhanced response structure
    
  version: 1.1.0
  contact:
    name: Top Dog Arena
    url: https://topdogarena.com
    email: support@topdogarena.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: Development server with full database integration
  - url: http://localhost:3000
    description: Development server base
  - url: https://api.topdogarena.com/api
    description: Production server

tags:
  - name: Health
    description: API health check endpoints
  - name: Wallet
    description: XRPL wallet creation and management
  - name: NFT
    description: NFT creation and management operations
  - name: Songbird
    description: Cross-chain NFT wrapping between XRPL and Songbird network
  - name: Auth
    description: Authentication endpoints (coming soon)

paths:
  /health:
    get:
      tags:
        - Health
      summary: Basic health check
      description: Simple endpoint to verify API is running
      operationId: getHealth
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                success: true
                message: "Top Dog Arena API is running"
                timestamp: "2025-07-21T03:29:05.442Z"
                version: "1.0.0"

  /health/detailed:
    get:
      tags:
        - Health
      summary: Detailed health check
      description: Comprehensive health check including service status
      operationId: getDetailedHealth
      responses:
        '200':
          description: Detailed health information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedHealthResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /health/xrpl:
    get:
      tags:
        - Health
      summary: XRPL connection status
      description: Check XRPL network connection and wallet status
      operationId: getXRPLHealth
      responses:
        '200':
          description: XRPL connection information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XRPLHealthResponse'
        '503':
          description: XRPL connection error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /wallet/credentials/{address}:
    get:
      tags:
        - Wallet
      summary: Get wallet credentials
      description: |
        Retrieve stored private credentials for a wallet address.
        Returns the seed and balance information if the wallet is owned by this system.
      operationId: getWalletCredentials
      parameters:
        - name: address
          in: path
          required: true
          description: XRPL wallet address
          schema:
            type: string
            example: "rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH"
      responses:
        '200':
          description: Wallet credentials retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                        example: "rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH"
                        description: "XRPL wallet address"
                      seed:
                        type: string
                        example: "sEdTM1uX8pu2do5XvTnutH6HsouMaM2"
                        description: "Private key seed for the wallet"
                      balanceDrops:
                        type: string
                        example: "10000000"
                        description: "Current balance in drops"
                      balanceXRP:
                        type: string
                        example: "10.000000"
                        description: "Current balance in XRP format"
                  message:
                    type: string
                    example: "Wallet credentials retrieved successfully"
        '404':
          description: Wallet not found or not owned by this system
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error retrieving credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /nft/create:
    post:
      tags:
        - NFT
      summary: Create a single NFT
      description: |
        Creates a single NFT on the XRPL. Requires XRPL wallet to be configured.
        
        **Rate Limit:** 10 requests per hour per IP
      operationId: createNFT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNFTRequest'
            example:
              name: "Mike Trout - Angels Superstar"
              description: "A legendary baseball card featuring Mike Trout in his Angels uniform."
              imageUrl: "https://topdogarena.com/images/cards/mike-trout-001.png"
              attributes:
                - trait_type: "Player"
                  value: "Mike Trout"
                - trait_type: "Team"
                  value: "Los Angeles Angels"
                - trait_type: "Position"
                  value: "Center Field"
                - trait_type: "Rarity"
                  value: "Legendary"
              external_url: "https://topdogarena.com/players/mike-trout"
              transferFee: 500
      responses:
        '201':
          description: NFT created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFTCreatedResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitErrorResponse'
        '503':
          description: XRPL service not configured
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /nft/batch-create:
    post:
      tags:
        - NFT
      summary: Create multiple NFTs in batch
      description: |
        Creates up to 10 NFTs in a single batch operation.
        
        **Rate Limit:** 3 requests per hour per IP
      operationId: batchCreateNFTs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchCreateNFTRequest'
      responses:
        '201':
          description: All NFTs created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNFTResponse'
        '207':
          description: Partial success - some NFTs failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchNFTResponse'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateLimitErrorResponse'

  /nft/{nftId}:
    get:
      tags:
        - NFT
      summary: Get NFT details by ID
      description: Retrieve detailed information about a specific NFT
      operationId: getNFTById
      parameters:
        - name: nftId
          in: path
          required: true
          description: 64-character hexadecimal NFT ID
          schema:
            type: string
            pattern: '^[0-9A-Fa-f]{64}$'
            example: "000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65"
      responses:
        '200':
          description: NFT details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFTDetailsResponse'
        '400':
          description: Invalid NFT ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: NFT not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /nft/account/{account}:
    get:
      tags:
        - NFT
      summary: Get NFTs owned by account
      description: Retrieve all NFTs owned by a specific XRPL account
      operationId: getAccountNFTs
      parameters:
        - name: account
          in: path
          required: true
          description: XRPL account address
          schema:
            type: string
            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'
            example: "rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH"
        - name: limit
          in: query
          description: Number of results to return (1-100)
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: marker
          in: query
          description: Pagination marker for next page
          schema:
            type: string
      responses:
        '200':
          description: Account NFTs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountNFTsResponse'
        '400':
          description: Invalid account address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /nft/wallet/info:
    get:
      tags:
        - NFT
      summary: Get wallet information
      description: Retrieve wallet and network configuration information
      operationId: getWalletInfo
      responses:
        '200':
          description: Wallet information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WalletInfoResponse'

  /api/stats/nft:
    get:
      tags:
        - NFT
      summary: Get NFT collection statistics
      description: Retrieve statistics about the NFT collection from the database
      operationId: getNFTStats
      responses:
        '200':
          description: NFT statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NFTStatsResponse'
        '500':
          description: Database error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /wallet/create:
    post:
      tags:
        - Wallet
      summary: Create new XRPL wallet
      description: Generate a new XRPL wallet with address, seed, and keys
      operationId: createWallet
      responses:
        '201':
          description: Wallet created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                        example: "rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD"
                      seed:
                        type: string
                        example: "sEdVRjMcsuXZDaeWfPUXT8xTsQRgbf4"
                      publicKey:
                        type: string
                      network:
                        type: string
                        example: "testnet"
                      databaseId:
                        type: string
                  message:
                    type: string
                  warning:
                    type: string
                  timestamp:
                    type: string
        '500':
          description: Wallet creation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /wallet/validate:
    post:
      tags:
        - Wallet
      summary: Validate XRPL address format
      description: Check if an XRPL address has valid format
      operationId: validateWalletAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address
              properties:
                address:
                  type: string
                  example: "rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b"
      responses:
        '200':
          description: Address validation result
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                      isValid:
                        type: boolean
                      network:
                        type: string
                  message:
                    type: string
                  timestamp:
                    type: string
        '400':
          description: Address is required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /wallet/fund:
    post:
      tags:
        - Wallet
      summary: Fund wallet from testnet faucet
      description: |
        Fund a wallet using XRPL testnet faucet (testnet only).
        
        **Important:** The XRPL testnet faucet creates a new wallet instead of funding the requested address.
        Use the `actualAddress` and `seed` from the response to access the funded wallet.
      operationId: fundWallet
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address
              properties:
                address:
                  type: string
                  example: "rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD"
                  description: "The wallet address you want to fund (note: faucet will create a different wallet)"
      responses:
        '200':
          description: Wallet funded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      balanceDrops:
                        type: string
                        example: "10000000"
                        description: "Balance in drops (1 XRP = 1,000,000 drops)"
                      balanceXRP:
                        type: string
                        example: "10.000000"
                        description: "Balance in human-readable XRP format"
                      requestedAddress:
                        type: string
                        example: "rsDfKpwz1fm5C2g3ehHutvS55EfqjXwmkD"
                        description: "The wallet address you originally requested funding for"
                      actualAddress:
                        type: string
                        example: "rDWxewf8S2ze6dHVVuLxrh95MfuFFUeQe1"
                        description: "The wallet address that was actually funded by the faucet"
                      seed:
                        type: string
                        example: "sEdVQQU2oN1tidWKJeKLQVVJ9FwVh4o"
                        description: "Private key seed for the funded wallet (keep secure!)"
                      network:
                        type: string
                        example: "testnet"
                        description: "Network where the wallet was funded"
                      note:
                        type: string
                        example: "Funding successful - 10 XRP added to wallet"
                        description: "Status message about the funding operation"
                  message:
                    type: string
                    example: "Wallet funded successfully"
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-07-23T03:04:33.102Z"
        '400':
          description: Invalid address, not testnet, or funding failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error during funding
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /wallet/sync-balance:
    post:
      tags:
        - Wallet
      summary: Sync wallet balance from XRPL
      description: Fetch and update wallet balance from XRPL network
      operationId: syncWalletBalance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address
              properties:
                address:
                  type: string
                  example: "rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b"
      responses:
        '200':
          description: Balance synced successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                      balance:
                        type: object
                        properties:
                          drops:
                            type: string
                          xrp:
                            type: string
                      synced:
                        type: boolean
                  message:
                    type: string
                  timestamp:
                    type: string
        '404':
          description: Account not found (unfunded)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      address:
                        type: string
                      balance:
                        type: object
                        nullable: true
                      synced:
                        type: boolean
                  error:
                    type: string
                  message:
                    type: string

  /wallet/sync-all:
    post:
      tags:
        - Wallet
      summary: Sync all wallet balances
      description: Sync balances for all wallets in the database
      operationId: syncAllWalletBalances
      responses:
        '200':
          description: Batch sync completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      totalAccounts:
                        type: integer
                      successCount:
                        type: integer
                      errorCount:
                        type: integer
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            address:
                              type: string
                            success:
                              type: boolean
                            balance:
                              type: string
                              nullable: true
                            error:
                              type: string
                              nullable: true
                  message:
                    type: string
                  timestamp:
                    type: string

  /wallet/list:
    get:
      tags:
        - Wallet
      summary: Get all wallets
      description: Retrieve all wallet information from the database
      operationId: getAllWallets
      parameters:
        - name: limit
          in: query
          description: Maximum number of wallets to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
        - name: includeSecrets
          in: query
          description: Include sensitive data for owned wallets (publicKey, hasSeed, hasPrivateKey)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Wallets retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      wallets:
                        type: array
                        items:
                          $ref: '#/components/schemas/WalletInfo'
                      count:
                        type: integer
                      total:
                        type: integer
                  message:
                    type: string
                  timestamp:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /wallet/{address}:
    get:
      tags:
        - Wallet
      summary: Get wallet by address
      description: Retrieve specific wallet information by XRPL address
      operationId: getWalletByAddress
      parameters:
        - name: address
          in: path
          required: true
          description: XRPL wallet address
          schema:
            type: string
            pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'
            example: "rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b"
        - name: includeSecrets
          in: query
          description: Include sensitive data for owned wallets (publicKey, hasSeed, hasPrivateKey)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Wallet information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/WalletInfo'
                  message:
                    type: string
                  timestamp:
                    type: string
        '400':
          description: Invalid address format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /wallet/stats:
    get:
      tags:
        - Wallet
      summary: Get wallet statistics
      description: Retrieve comprehensive statistics about all wallets in the database
      operationId: getWalletStats
      responses:
        '200':
          description: Wallet statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      totalWallets:
                        type: integer
                        description: Total number of wallets
                      ownedWallets:
                        type: integer
                        description: Number of wallets owned by the service
                      externalWallets:
                        type: integer
                        description: Number of external/imported wallets
                      activeWallets:
                        type: integer
                        description: Number of active wallets
                      fundedWallets:
                        type: integer
                        description: Number of wallets with non-zero balance
                      unfundedWallets:
                        type: integer
                        description: Number of wallets with zero or no balance
                      networkDistribution:
                        type: object
                        properties:
                          testnet:
                            type: integer
                          mainnet:
                            type: integer
                          devnet:
                            type: integer
                      recentlyCreated:
                        type: integer
                        description: Number of wallets created in the last 24 hours
                      recentlySynced:
                        type: integer
                        description: Number of wallets synced in the last hour
                  message:
                    type: string
                  timestamp:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      tags:
        - Auth
      summary: Register new user
      description: Register a new user account (not implemented yet)
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
      responses:
        '501':
          description: Not implemented yet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplementedResponse'

  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      description: Authenticate user and return access token (not implemented yet)
      operationId: loginUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '501':
          description: Not implemented yet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotImplementedResponse'

  /songbird/status:
    get:
      tags:
        - Songbird
      summary: Get Songbird network connection status
      description: Check the status of the Songbird network connection and service availability
      operationId: getSongbirdStatus
      responses:
        '200':
          description: Songbird connection status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      connected:
                        type: boolean
                        example: true
                      network:
                        type: string
                        example: "songbird"
                      walletAddress:
                        type: string
                        example: "0x742d35Cc6648C4532B3DCf4FA0EFC9bc57F8e16F"
                      contractAddress:
                        type: string
                        example: "0x1234567890123456789012345678901234567890"
                      balance:
                        type: string
                        example: "1.5 SGB"
                  timestamp:
                    type: string
                    format: date-time

  /songbird/wrap:
    post:
      tags:
        - Songbird
      summary: Wrap XRPL NFT to Songbird
      description: Wrap an XRPL NFT as an ERC721 token on the Songbird network
      operationId: wrapXRPLNFT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - xrplNftId
                - xrplOwnerAddress
                - songbirdRecipientAddress
                - metadata
              properties:
                xrplNftId:
                  type: string
                  description: The XRPL NFT ID to wrap
                  example: "000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65"
                xrplOwnerAddress:
                  type: string
                  description: The XRPL address that owns the NFT
                  example: "rN7n7otQDd6FczFgLdSqtcsAUxDkw6fzRH"
                songbirdRecipientAddress:
                  type: string
                  description: The Songbird address that will receive the wrapped NFT
                  example: "0x742d35Cc6648C4532B3DCf4FA0EFC9bc57F8e16F"
                metadata:
                  type: object
                  description: NFT metadata
                  properties:
                    name:
                      type: string
                      example: "Baseball Card #123"
                    description:
                      type: string
                      example: "Rare rookie card"
                    image:
                      type: string
                      example: "https://example.com/image.jpg"
                    attributes:
                      type: array
                      items:
                        type: object
      responses:
        '200':
          description: NFT wrapped successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      songbirdTokenId:
                        type: string
                        example: "1"
                      transactionHash:
                        type: string
                        example: "0xabcdef..."
                      gasUsed:
                        type: string
                        example: "150000"
                  message:
                    type: string
                    example: "NFT successfully wrapped to Songbird"
                  timestamp:
                    type: string
                    format: date-time

  /songbird/unwrap:
    post:
      tags:
        - Songbird
      summary: Unwrap Songbird NFT back to XRPL
      description: Unwrap a Songbird ERC721 token back to the original XRPL NFT
      operationId: unwrapSongbirdNFT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - songbirdTokenId
              properties:
                songbirdTokenId:
                  type: string
                  description: The Songbird token ID to unwrap
                  example: "1"
      responses:
        '200':
          description: NFT unwrapped successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      xrplNftId:
                        type: string
                        example: "000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65"
                      transactionHash:
                        type: string
                        example: "0xabcdef..."
                      gasUsed:
                        type: string
                        example: "100000"
                      owner:
                        type: string
                        example: "0x742d35Cc6648C4532B3DCf4FA0EFC9bc57F8e16F"
                  message:
                    type: string
                    example: "NFT successfully unwrapped from Songbird"
                  timestamp:
                    type: string
                    format: date-time

  /songbird/nft/{tokenId}:
    get:
      tags:
        - Songbird
      summary: Get wrapped NFT information
      description: Retrieve detailed information about a wrapped NFT on Songbird
      operationId: getWrappedNFTInfo
      parameters:
        - name: tokenId
          in: path
          required: true
          description: The Songbird token ID
          schema:
            type: string
            example: "1"
      responses:
        '200':
          description: Wrapped NFT information retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      xrplNftId:
                        type: string
                        example: "000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65"
                      isWrapped:
                        type: boolean
                        example: true
                      owner:
                        type: string
                        example: "0x742d35Cc6648C4532B3DCf4FA0EFC9bc57F8e16F"
                      tokenURI:
                        type: string
                        example: "https://api.topdogarena.com/metadata/abc123"
                      metadata:
                        type: object
                        description: NFT metadata object
                  message:
                    type: string
                    example: "Wrapped NFT info retrieved successfully"
                  timestamp:
                    type: string
                    format: date-time

  /songbird/gas/{operation}:
    get:
      tags:
        - Songbird
      summary: Get gas estimates for operations
      description: Get gas cost estimates for wrapping or unwrapping operations
      operationId: getSongbirdGasEstimate
      parameters:
        - name: operation
          in: path
          required: true
          description: The operation to estimate gas for
          schema:
            type: string
            enum: [wrap, unwrap]
            example: "wrap"
      responses:
        '200':
          description: Gas estimate retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      operation:
                        type: string
                        example: "wrap"
                      gasLimit:
                        type: string
                        example: "150000"
                      gasPrice:
                        type: string
                        example: "25000000000"
                      estimatedCost:
                        type: string
                        example: "0.00375 SGB"
                  message:
                    type: string
                    example: "Gas estimate for wrap operation"
                  timestamp:
                    type: string
                    format: date-time

  /songbird/wallet/{address}/nfts:
    get:
      tags:
        - Songbird
      summary: Get wallet's wrapped NFTs
      description: Retrieve all wrapped NFTs owned by a specific wallet on Songbird
      operationId: getWalletWrappedNFTs
      parameters:
        - name: address
          in: path
          required: true
          description: The wallet address to query
          schema:
            type: string
            example: "0x742d35Cc6648C4532B3DCf4FA0EFC9bc57F8e16F"
      responses:
        '200':
          description: Wallet NFTs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      wallet:
                        type: string
                        example: "0x742d35Cc6648C4532B3DCf4FA0EFC9bc57F8e16F"
                      nfts:
                        type: array
                        items:
                          type: object
                          properties:
                            tokenId:
                              type: string
                              example: "1"
                            xrplNftId:
                              type: string
                              example: "000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65"
                            isWrapped:
                              type: boolean
                              example: true
                            tokenURI:
                              type: string
                              example: "https://api.topdogarena.com/metadata/abc123"
                            metadata:
                              type: object
                      count:
                        type: integer
                        example: 3
                  message:
                    type: string
                    example: "Songbird NFTs retrieved successfully"
                  timestamp:
                    type: string
                    format: date-time

components:
  schemas:
    HealthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "Top Dog Arena API is running"
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "1.0.0"

    DetailedHealthResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        environment:
          type: string
          enum: [development, production, test]
        services:
          type: object
          properties:
            api:
              type: string
              enum: [healthy, unhealthy]
            xrpl:
              type: string
              enum: [connected, disconnected, not_configured, error]
            database:
              type: string
              enum: [connected, disconnected, not_configured, error]

    XRPLHealthResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        xrpl:
          type: object
          properties:
            network:
              type: string
              enum: [mainnet, testnet, devnet]
            serverUrl:
              type: string
              format: uri
            walletAddress:
              type: string
              nullable: true
            connected:
              type: boolean
            balance:
              type: object
              nullable: true
              properties:
                balance:
                  type: string
                  description: Total balance in drops
                available:
                  type: string
                  description: Available balance in drops

    CreateNFTRequest:
      type: object
      required:
        - name
        - description
        - imageUrl
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
          example: "Mike Trout - Angels Superstar"
        description:
          type: string
          minLength: 1
          maxLength: 1000
          example: "A legendary baseball card featuring Mike Trout"
        imageUrl:
          type: string
          format: uri
          example: "https://topdogarena.com/images/cards/mike-trout-001.png"
        attributes:
          type: array
          items:
            type: object
            properties:
              trait_type:
                type: string
              value:
                oneOf:
                  - type: string
                  - type: number
          example:
            - trait_type: "Player"
              value: "Mike Trout"
            - trait_type: "Team"
              value: "Los Angeles Angels"
        external_url:
          type: string
          format: uri
        animation_url:
          type: string
          format: uri
        transferFee:
          type: integer
          minimum: 0
          maximum: 50000
          description: Transfer fee in 1/100,000th units (10000 = 10%)
        recipient:
          type: string
          pattern: '^r[1-9A-HJ-NP-Za-km-z]{25,34}$'
          description: XRPL address to mint NFT to
        flags:
          type: integer
          description: NFT flags (8 = transferable)

    BatchCreateNFTRequest:
      type: object
      required:
        - nfts
      properties:
        nfts:
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/CreateNFTRequest'

    NFTCreatedResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            nftId:
              type: string
              example: "000B013A95F14B0044F78A264E41713C64B5F89242540EE208C3098E00000D65"
            txHash:
              type: string
              example: "E3FE6EA3D48F0C2B639448020EA4F03D4F4F8BDBD2397B43FE71618E38D4B277"
            fee:
              type: string
              example: "12"
            metadata:
              $ref: '#/components/schemas/NFTMetadata'
        message:
          type: string
          example: "NFT created successfully"

    BatchNFTResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            successful:
              type: array
              items:
                type: object
                properties:
                  index:
                    type: integer
                  nftId:
                    type: string
                  txHash:
                    type: string
                  fee:
                    type: string
                  metadata:
                    $ref: '#/components/schemas/NFTMetadata'
            failed:
              type: array
              items:
                type: object
                properties:
                  index:
                    type: integer
                  error:
                    type: string
                  nftData:
                    type: object
            summary:
              type: object
              properties:
                total:
                  type: integer
                successful:
                  type: integer
                failed:
                  type: integer
        message:
          type: string

    NFTDetailsResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            nft_id:
              type: string
            ledger_index:
              type: integer
            owner:
              type: string
            is_burned:
              type: boolean
            flags:
              type: integer
            transfer_fee:
              type: integer
            issuer:
              type: string
            nft_taxon:
              type: integer
            nft_serial:
              type: integer
            uri:
              type: string
              description: Hex-encoded metadata URI
        message:
          type: string

    AccountNFTsResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            account:
              type: string
            nfts:
              type: array
              items:
                type: object
                properties:
                  Flags:
                    type: integer
                  Issuer:
                    type: string
                  NFTokenID:
                    type: string
                  NFTokenTaxon:
                    type: integer
                  TransferFee:
                    type: integer
                  URI:
                    type: string
                  nft_serial:
                    type: integer
            count:
              type: integer
        message:
          type: string

    WalletInfoResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            network:
              type: object
              properties:
                network:
                  type: string
                  example: "testnet"
                  description: "XRPL network (testnet or mainnet)"
                serverUrl:
                  type: string
                  example: "wss://s.altnet.rippletest.net:51233"
                  description: "XRPL server WebSocket URL"
                walletAddress:
                  type: string
                  example: "rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b"
                  description: "XRPL wallet address"
            balance:
              type: object
              properties:
                drops:
                  type: string
                  example: "30000000"
                  description: "Balance in drops (1 XRP = 1,000,000 drops)"
                xrp:
                  type: string
                  example: "30.000000"
                  description: "Balance in XRP (human readable)"
            connected:
              type: boolean
              example: true
              description: "Whether the wallet is connected"
            clientConnected:
              type: boolean
              example: true
              description: "Whether the XRPL client is connected"
        message:
          type: string
          example: "Real XRPL wallet connected"
          description: "Status message"

    WalletInfo:
      type: object
      properties:
        id:
          type: string
          example: "cld3fgh8900001234567890"
          description: Database ID of the wallet
        address:
          type: string
          example: "rwiYXAA45LAg6GuMVm67owGtZC3tknbf4b"
          description: XRPL wallet address
        network:
          type: string
          example: "testnet"
          enum: [testnet, mainnet, devnet]
          description: XRPL network
        balance:
          type: string
          nullable: true
          example: "25000000"
          description: Balance in drops (1 XRP = 1,000,000 drops)
        balanceXRP:
          type: string
          nullable: true
          example: "25.000000"
          description: Balance in XRP (human readable)
        isOwned:
          type: boolean
          example: true
          description: Whether this wallet is owned by the service
        isActive:
          type: boolean
          example: true
          description: Whether the wallet is active
        nickname:
          type: string
          nullable: true
          example: "Main Trading Wallet"
          description: Optional nickname for the wallet
        description:
          type: string
          nullable: true
          example: "Primary wallet for NFT trading operations"
          description: Optional description
        tags:
          type: array
          nullable: true
          items:
            type: string
          example: ["trading", "main", "production"]
          description: Array of tags for categorization
        createdAt:
          type: string
          format: date-time
          example: "2025-07-22T10:30:00.000Z"
          description: When the wallet was created
        updatedAt:
          type: string
          format: date-time
          example: "2025-07-22T15:45:30.000Z"
          description: When the wallet was last updated
        lastSyncAt:
          type: string
          format: date-time
          nullable: true
          example: "2025-07-22T15:45:30.000Z"
          description: When the wallet balance was last synced
        nftCount:
          type: object
          properties:
            owned:
              type: integer
              example: 12
              description: Number of NFTs owned by this wallet
            issued:
              type: integer
              example: 5
              description: Number of NFTs issued by this wallet
        publicKey:
          type: string
          nullable: true
          example: "ED123456..."
          description: Public key (only included if includeSecrets=true and wallet is owned)
        hasSeed:
          type: boolean
          nullable: true
          example: true
          description: Whether wallet seed is stored (only included if includeSecrets=true and wallet is owned)
        hasPrivateKey:
          type: boolean
          nullable: true
          example: true
          description: Whether private key is stored (only included if includeSecrets=true and wallet is owned)

    NFTStatsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            totalNFTs:
              type: number
              example: 10
              description: Total number of NFTs in the database
            totalAccounts:
              type: number
              example: 5
              description: Total number of unique accounts
            recentMints:
              type: number
              example: 3
              description: Number of NFTs minted in the last 24 hours
            totalTransactions:
              type: number
              example: 25
              description: Total number of recorded transactions
        message:
          type: string
          example: "NFT statistics retrieved successfully"
          description: Status message

    NFTMetadata:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
        attributes:
          type: array
          items:
            type: object
            properties:
              trait_type:
                type: string
              value:
                oneOf:
                  - type: string
                  - type: number
        external_url:
          type: string
        animation_url:
          type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time
        path:
          type: string

    ValidationErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Validation failed"
        message:
          type: string
          example: "Invalid request data"
        details:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string
        timestamp:
          type: string
          format: date-time

    RateLimitErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
          example: "Too many requests"
        message:
          type: string
          example: "Rate limit exceeded. Please try again later."
        retryAfter:
          type: string
          example: "15 minutes"

    NotImplementedResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Feature not implemented yet"
        timestamp:
          type: string
          format: date-time

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authenticated requests (coming soon)

security: []
